package ru.porozhnetalv;

import ru.porozhnetalv.models.FileListModel;
import ru.porozhnetalv.models.SelectedFilesTableModel;
import ru.porozhnetalv.renderers.FileListCellRenderer;
import ru.porozhnetalv.renderers.FileTableCellRenderer;

import javax.swing.*;
import java.awt.*;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;

public class JFilePairsChooser extends JDialog {
    private JPanel contentPane;
    private JButton buttonOK;
    private JButton buttonCancel;
    private JButton selectButton;
    private JButton deselectButton;
    private JList<File> xlsFiles;
    private JList<File> xmlFiles;
    private JTable pairTable;
    private JButton XLSFolderButton;
    private JButton XMLFolderButton;
    private JDirectoryChooser xlsDirectoryChooser = new JDirectoryChooser(".");
    private JDirectoryChooser xmlDirectoryChooser = new JDirectoryChooser(".");

    public JFilePairsChooser() {
        setContentPane(contentPane);
        setModal(true);
        getRootPane().setDefaultButton(buttonOK);

        buttonOK.addActionListener(e -> onOK());

        buttonCancel.addActionListener(e -> onCancel());

        // call onCancel() when cross is clicked
        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                onCancel();
            }
        });

        // call onCancel() on ESCAPE
        contentPane.registerKeyboardAction(e -> onCancel(), KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);

        selectButton.addActionListener(e -> onSelect());
        deselectButton.addActionListener(e -> onDeselect());

        XLSFolderButton.addActionListener(new ChooseDirectoryListener(this, xlsDirectoryChooser));
        XMLFolderButton.addActionListener(new ChooseDirectoryListener(this, xmlDirectoryChooser));
    }

    private void onSelect() {
        ((SelectedFilesTableModel) pairTable.getModel()).addRow(xlsFiles.getSelectedValue(), xmlFiles.getSelectedValue());
        ((FileListModel) xlsFiles.getModel()).removeElementAt(xlsFiles.getSelectedIndex());
        ((FileListModel) xmlFiles.getModel()).removeElementAt(xmlFiles.getSelectedIndex());
    }

    private void onDeselect() {
        SelectedFilesTableModel tableModel = (SelectedFilesTableModel) pairTable.getModel();
        File xlsFile = tableModel.getValueAt(pairTable.getSelectedRow(), 0);
        ((FileListModel) xlsFiles.getModel()).addElement(xlsFile);

        File xmlFile = tableModel.getValueAt(pairTable.getSelectedRow(), 1);
        ((FileListModel) xmlFiles.getModel()).addElement(xmlFile);
        tableModel.removeRow(pairTable.getSelectedRow());
    }

    private void onOK() {
        for (File[] files : ((SelectedFilesTableModel) pairTable.getModel()).getRows()) {
            try {
                PANExtractor.processFilePair(files[0].getName(), files[1].getName());
                JOptionPane.showMessageDialog(this, "Successful");
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Whatchout!");
            }
        }
    }

    private void onCancel() {
        // add your code here if necessary
        dispose();
    }

    public static void main(String[] args) {
        JFilePairsChooser dialog = new JFilePairsChooser();
        dialog.xlsDirectoryChooser.setSelectedDirectory(new File("."));
        dialog.xmlDirectoryChooser.setSelectedDirectory(new File("."));
        dialog.init();

        dialog.pack();
        dialog.setVisible(true);
        System.exit(0);
    }

    void init() {
        initFileList(xlsFiles, xlsDirectoryChooser.getSelectedDirectory(), "xlsx");
        initFileList(xmlFiles, xmlDirectoryChooser.getSelectedDirectory(), "xml");
        pairTable.setModel(new SelectedFilesTableModel());
        pairTable.setDefaultRenderer(File.class, new FileTableCellRenderer());
        pairTable.setRowSelectionAllowed(true);
    }

    private void initFileList(JList<File> jList, File directory, String extension) {
        jList.setModel(new FileListModel(directory, extension));
        jList.setCellRenderer(new FileListCellRenderer());
        jList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        contentPane = new JPanel();
        contentPane.setLayout(new GridBagLayout());
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridBagLayout());
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.insets = new Insets(5, 5, 5, 5);
        contentPane.add(panel1, gbc);
        xlsFiles = new JList();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.insets = new Insets(5, 5, 5, 5);
        panel1.add(xlsFiles, gbc);
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridBagLayout());
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        panel1.add(panel2, gbc);
        selectButton = new JButton();
        selectButton.setText(">");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(5, 5, 5, 5);
        panel2.add(selectButton, gbc);
        deselectButton = new JButton();
        deselectButton.setText("<");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(5, 5, 5, 5);
        panel2.add(deselectButton, gbc);
        xmlFiles = new JList();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.insets = new Insets(5, 5, 5, 5);
        panel1.add(xmlFiles, gbc);
        pairTable = new JTable();
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.insets = new Insets(5, 5, 5, 5);
        panel1.add(pairTable, gbc);
        XLSFolderButton = new JButton();
        XLSFolderButton.setText("XLS Folder...");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(5, 5, 5, 5);
        panel1.add(XLSFolderButton, gbc);
        XMLFolderButton = new JButton();
        XMLFolderButton.setText("XML Folder...");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(5, 5, 5, 5);
        panel1.add(XMLFolderButton, gbc);
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new GridBagLayout());
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        panel1.add(panel3, gbc);
        buttonOK = new JButton();
        buttonOK.setText("Remove printed cards");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(5, 5, 5, 5);
        panel3.add(buttonOK, gbc);
        buttonCancel = new JButton();
        buttonCancel.setText("Cancel");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(5, 5, 5, 5);
        panel3.add(buttonCancel, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPane;
    }

}
